// File generated by Blink v0.18.1 (https://github.com/1Axen/Blink)
// This file is not meant to be edited

export declare const stepReplication: () => void
export declare namespace State {
	export namespace PlayerData {
		type Default = { gems: number, coins: number }
		type Patch = { gems?: number | undefined, coins?: number | undefined }
		type DefaultMap = Map<string, { gems: number, coins: number }>
		type PatchMap = Map<string, { gems?: number | undefined, coins?: number | undefined }>
	}
	export namespace WaveData {
		type Default = { hpStocks: number, activeWave: boolean, votes: number, wave: number }
		type Patch = { hpStocks?: number | undefined, activeWave?: boolean | undefined, votes?: number | undefined, wave?: number | undefined }
	}
	type PayloadSync = { type: "init", data: { players: Map<string, { gems: number, coins: number }>, waveData: { hpStocks: number, activeWave: boolean, votes: number, wave: number } } } | { type: "patch", data: { players?: Map<string, { gems?: number | undefined, coins?: number | undefined }> | undefined, waveData?: { hpStocks?: number | undefined, activeWave?: boolean | undefined, votes?: number | undefined, wave?: number | undefined } | undefined } }
	export const sync: {
		on: (Listener: (Value: { type: "init", data: { players: Map<string, { gems: number, coins: number }>, waveData: { hpStocks: number, activeWave: boolean, votes: number, wave: number } } } | { type: "patch", data: { players?: Map<string, { gems?: number | undefined, coins?: number | undefined }> | undefined, waveData?: { hpStocks?: number | undefined, activeWave?: boolean | undefined, votes?: number | undefined, wave?: number | undefined } | undefined } }) => void) => (() => void)
	}
	export const init: {
		fire: (Value: void) => void
	}
}
export declare namespace Wave {
	export const vote: {
		fire: (Value: void) => void
	}
}
